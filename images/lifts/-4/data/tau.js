import {Vector2} from "three";


const tau = new Vector2(0,1);

//these *dont* come directly from tau, as thats the wrong representation of the rectangle
//need to change coordinates in SL2Z: apply Tinv to move one to the left
//then apply S = -1/z
//this maps tau 1/2 + i/2
//multiply by 2Pi to get (A/2,L/2)

const curveArea = 2*Math.PI;
const curveLength =  2*Math.PI;

//this is the equator of the 2 sphere!

let coordCurve = function(t){

    return {
        phi: Math.PI/2,
        theta: t
    };
}


//takes in points in the standard FD gen by 1 and tau
//changes to the lattice used by the hopf parameterization
//generated by 2pi and (a/2,l/2)
//this is NOT JUST A RESCALING:
let toHopfLattice = function(data) {
    //data is of form [x,y];
    //first, scale+ rotate so generators are (1,1) and (-1,1)
    let x = data[0];
    let y = data[1];
    let u = (x-y);
    let v = (x+y);
    //now scale by 1/2: to get (1/2,1/2) and (-1/2,1/2)
    u = u/2;
    v = v/2;
    //this lattice is ALSO generated by 1 and (1/2, 1/2):
    //so its the right form for us.
    //now scale by 2PI in all directions
    return new Vector2(u,v).multiplyScalar(2*Math.PI);
}




export {tau, curveLength,curveArea, coordCurve, toHopfLattice};
